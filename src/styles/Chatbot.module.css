/* Chatbot Container */
.chatbotContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background-color: rgb(33, 33, 33); /* Default background color */
}

/* Light Mode */
.lightMode {
  background-color: #f4f4f4; /* Light background color */
  color: #333; /* Light text color */
}

/* Dark Mode */
.darkMode {
  background-color: rgb(33, 33, 33); /* Dark background color */
  color: white; /* Dark text color */
}

/* Chat Card */
.chatbotCard {
  width: 100%;
  max-width: 1000px;
  background-color: inherit; /* Inherit background color from mode */
  border-radius: 10px;
  padding: 10px;
  display: flex;
  flex-direction: column;
  height: 80vh;
}

/* Chat Window */
.chatWindow {
  text-align: left;
  flex-grow: 1;
  overflow-y: auto;
  padding: 10px;
  color: white;
  background-color: inherit; /* Inherit background color from mode */
  display: flex;
  flex-direction: column;
  margin-top: 60px; /* Adjust this value based on the height of your Nav bar */
}

/* User & Bot Messages */
.userMessage {
  text-align: left; /* Align text to the right */
  background-color: rgba(255, 255, 255, 0.1); /* Light gray with transparency */
  color: white;
  padding: 3px 10px; /* Reduced padding on top and bottom */
  border-radius: 20px;
  max-width: 70%; /* Adjusted max-width to 70% */
  margin: 5px 0; /* Eliminated spaces on both sides */
  word-wrap: break-word;
  display: inline-block;
  align-self: flex-end;
  font-size: 20px; /* Increased font size */
  box-shadow: 1px 2px 10px rgba(0, 0, 0, 0.2); /* Added border shadow to the right */
}

.lightMode .userMessage {
  color: black; /* Use black text color in light mode */
  border: 1px solid #ccc; /* Add border line in light mode */
}

.botMessage {
  text-align: left;
  color: white;
  padding: 10px;
  border-radius: 8px;
  max-width: 70%;
  margin: 5px auto 5px 0;
  word-wrap: break-word;
  font-size: 22px; /* Adjusted font size */
  font-family: 'Courier New', Courier, monospace; /* Changed font style */
}

.lightMode .botMessage {
  color: black; /* Use black text color in light mode */
}

.lightMode .botMessage {
  color: black; /* Use black text color in light mode */
}

/* Typing Indicator */
.typingIndicator {
  font-style: italic;
  color: #888;
  padding: 5px;
  align-self: flex-start; /* Ensure the typing indicator is on the left side */
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translate(-50%, -40%);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%);
  }
}

.inputContainer {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  transition: all 0.3s ease-in-out;
  width: 70%;
  max-width: 800px; /* Prevents it from becoming too wide */
  display: flex;
  align-items: center;
  background: white;
  border-radius: 30px; /* Rounded edges */
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  padding: 25px;
  
  /* Add fade-in upward animation */
  animation: fadeInUp 0.5s ease-out;
}


.inputContainer.slideDown {
  top: auto;
  bottom: 10px;
  transform: translate(-50%, 0);
  width: 90%; /* Make it responsive */
  max-width: 600px; /* Ensures it doesn't stretch too much */
}

/* Ensure Dark Mode Background for Input Container */
.darkMode .inputContainer {
  background-color: rgb(45, 45, 45); /* Dark gray for dark mode */
}

.darkMode .chatInput {
  color: white; /* Make text white in dark mode */
}

.chatInput::placeholder {
  color: gray;
}

.darkMode .chatInput::placeholder {
  color: lightgray; /* Lighten placeholder text in dark mode */
}

/* Ensure light mode version maintains visibility */
.lightMode .inputContainer {
  background-color: white;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

/* Chat Input Box */
.chatInput {
  flex-grow: 1;
  background: none;
  border: none;
  color: white; /* Changed text color to light white for dark mode */
  padding: 10px;
  outline: none;
  font-size: 16px;
  border-radius: 5px;
}

.lightMode .chatInput {
  color: gray; /* Gray text color for light mode */
}

.chatInput::placeholder {
  color: gray; /* Changed placeholder color to gray */
  font-size: 16px;
}

.chatInput:focus::placeholder {
  color: transparent; /* Hide placeholder when input is focused */
}

/* Send Button */
.sendButton {
  background: none;
  border: none;
  color: white;
  cursor: pointer;
  font-size: 24px; /* Increased font size */
  padding: 12px; /* Increased padding */
  margin-left: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: color 0.2s ease-in-out, background 0.2s ease-in-out;
  position: relative;
  border-radius: 50%;
}

/* Background Circle */
.sendButton::before {
  content: '';
  position: absolute;
  width: 50px; /* Increased width */
  height: 50px; /* Increased height */
  background-color: rgba(255, 255, 255, 0.2);
  border-radius: 50%;
  z-index: -1;
}

/* Hover Effect in Light Mode */
.sendButton:hover {
  background-color: rgba(50, 50, 50, 0.2); /* Dark gray transparent */
  color: black; /* Darker text color for visibility */
}

/* Hover Effect in Dark Mode */
.darkMode .sendButton:hover {
  background-color: rgba(255, 255, 255, 0.2); /* Light gray transparent */
  color: white;
}


.lightMode .sendButton {
  color: gray; /* Use black text color in light mode */
}

.lightMode .sendButton::before {
  background-color: rgba(0, 0, 0, 0.1); /* Adjust background color for light mode */
}

/* Custom scrollbar styles */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background-color: rgba(255, 255, 255, 0.2);
  border-radius: 10px;
  border: 2px solid transparent;
  background-clip: content-box;
}

::-webkit-scrollbar-thumb:hover {
  background-color: rgba(255, 255, 255, 0.4);
}

/* Slide up animation */
@keyframes slideUp {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0);
  }
}

/* Slide down animation */
@keyframes slideDown {
  from {
    top: 50%;
  }
  to {
    top: auto;
    bottom: 0;
    transform: translate(-50%, 0);
  }
}

.themeToggle {
  position: fixed;  /* Fixed so it stays in place */
  top: 20px;
  left: 20px;
  background: none;
  border: none;
  color: black; /* Adjust for visibility */
  cursor: pointer;
  font-size: 30px;
  padding: 25px;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000; /* Ensure it stays above other elements */
  outline: none;
}

.themeToggle:hover {
  color: rgba(255, 255, 255, 0.7); /* Adjust hover color as needed */
}

.themeToggle .icon {
  font-size: 40px; /* Increased icon size */
  margin-left: 10px; /* Increased spacing */
}

.lightMode .themeToggle {
  color: gray; /* Change color to black in light mode */
}

.lightMode .themeToggle .icon {
  border: none; /* Remove border in light mode */
}

.themeToggle.left {
  color: darkgray; /* Change color to dark gray when toggle is on the left */
}

.themeToggle.left .icon {
  color: gray; /* Change color to gray when toggle is on the left */
}

/* Greeting Header */
.greeting {
  position: absolute;
  top: 8%;
  left: 50%;
  transform: translateX(-50%);
  color: white;
  padding: 10px 20px;
  border-radius: 20px;
  font-size: 44px; /* Adjust font size as needed */
  text-align: center;
  margin-top: 20px; /* Adjust margin as needed */
  z-index: 1; /* Ensure it is above other elements */
  background: linear-gradient(to right, 
    #5381EC, /* Azure */
    #7C95EA, /* Vista Blue */
    #ADAAE6, /* Periwinkle */
    #B26DA9, /* Sky Magenta */
    #D76573  /* Blush */
  );
  -webkit-background-clip: text;  /* For webkit-based browsers */
  background-clip: text;          /* Standard property for modern browsers */
  -webkit-text-fill-color: transparent;
  font-weight: 600; /* Added font weight */
}
